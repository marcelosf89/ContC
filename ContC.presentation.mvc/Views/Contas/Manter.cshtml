@model ContC.presentation.mvc.Models.ContasModels.ContasManterModel
@{
    AjaxOptions ao = new AjaxOptions()
    {
        OnBegin = "$('.jquery-waiting-base-container').showing({ modo: 'slow' });",
        OnComplete = "$('.jquery-waiting-base-container').closing({ modo: 'slow' });",
        UpdateTargetId = "content"
    };
}
<script src="@Scripts.Url("~/Scripts/plugin/select2/select2.min.js")"></script>
<script src="@Scripts.Url("~/Scripts/plugin/masked-input/jquery.maskedinput.min.js")"></script>

<div class="jarviswidget jarviswidget-sortable" id="wid-id-4" data-widget-editbutton="false">
    <header role="heading">
        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
        <h2>Cadastro de Boleto</h2>
        </span>
    </header>
    <div role="content">
        <div class="jarviswidget-editbox">
        </div>
        <div class="widget-body no-padding">
            @if (!String.IsNullOrEmpty(Model.Erro))
            {
                <div class="alert alert-danger fade in">
                    <button class="close" data-dismiss="alert">
                        ×
                    </button>
                    <i class="fa-fw fa fa-times"></i>
                    <strong>Error!</strong> @Model.Erro
                </div>
            }
            @using (Ajax.BeginForm("Agendar", "Contas", new { }, ao, new { @class = "smart-form", role = "form", novalidate = "novalidate" }))
            {
                @Html.HiddenFor(m => m.EmpresaId)
                @Html.HiddenFor(m => m.Id)
                @Html.HiddenFor(m => m.TempId)
                @Html.HiddenFor(m => m.UploadFile)
                <fieldset>
                    <section>
                        <label class="checkbox-inline">
                            <input id="cbBoleto" type="radio" class="radiobox" name="style-0a" checked="checked" data-value="boleto">
                            <span>Boleto</span>
                        </label>
                        <label class="checkbox-inline">
                            <input id="cbConta" type="radio" class="radiobox" name="style-0a" data-value="conta">
                            <span>Conta</span>
                        </label>
                    </section>
                    <section>
                        <label class="input">
                            <i class="icon-append fa fa-barcode"></i>
                            @Html.TextBoxFor(p => p.NumeroConta, new { placeholder = "Codigo de Barras" })
                            @Html.ValidationMessageFor(model => model.NumeroConta)
                        </label>
                    </section>
                </fieldset>
                <fieldset>
                    <div class="row">
                        <section class="col col-4">
                            <label class="label-control">Valor:</label>
                            <label class="input">
                                <i class="icon-append fa fa-dollar"></i>
                                @Html.TextBoxFor(p => p.Valor, new { placeholder = "Valor", type = "number" })
                            </label>
                        </section>
                        <section class="col col-4">

                            <label class="label-control">Vencimento:</label>
                            <label class="input">
                                <i class="icon-append fa fa-calendar"></i>
                                @Html.TextBoxFor(p => p.Validade, new { placeholder = "Data de Vencimento", data_dateformat = "dd/mm/yy" })
                                @Html.ValidationMessageFor(model => model.Validade)
                            </label>
                        </section>
                        <section class="col col-4">
                            <div class="input-group">
                                <label class="label-control">Categoria:</label>
                                @Html.DropDownListFor(p => p.CategoriaId, Model.Categorias, new { placeholder = "Categoria", @class = "form-control col-md-12" })
                                @Html.ValidationMessageFor(model => model.CategoriaId)
                            </div>
                        </section>
                    </div>
                    <section>
                        <label class="label-control">Fornecedor :</label>
                        <label class="input">
                            <i class="icon-append fa fa-group"></i>
                            @Html.TextBoxFor(m => m.Fornecedor, new { @class = "form-control", placeholder = "Fornecedor...", id = "fornecedor" })
                            @Html.ValidationMessageFor(model => model.Fornecedor)
                            @Html.HiddenFor(p => p.FornecedorId)
                            @Html.ValidationMessageFor(model => model.FornecedorId)
                        </label>
                    </section>
                </fieldset>
                <fieldset>
                    <section>
                        <label class="control-label">Carregar Comprovante</label>
                        <label id="lblif" for="file" class="input input-file">
                            @Html.AntiForgeryToken()
                            <input type="file" id="fuPDFAdd" class="form-control" name="file" />
                            <i id="iconSuccess" class="icon-append fa fa-check"></i>
                            <i id="iconLoad" class="icon-append fa fa-cloud-upload"></i>
                            <i id="iconErro" class="icon-append glyphicon glyphicon-remove"></i>
                        </label>
                    </section>
                </fieldset>
                <footer>
                    @Ajax.ActionLink("Voltar", "Index", new { empresaId = Model.EmpresaId }, ao, new { @class = "btn btn-default" })
                    <button type="submit" class="btn btn-primary">
                        Agendar
                    </button>
                </footer>
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        $("#btnPagar").hide();
        $("#iconSuccess").hide();
        $("#iconErro").hide();

        $(".radiobox").on( "click",function(){
            var valor = $("#NumeroConta").val();
            if($( "input:checked" ).attr("data-value") =="boleto"){
                $("#NumeroConta").mask("99999.99999 99999.999999 99999.999999 9 99999999999999", { placeholder: "*" });
            }
            else{
                $("#NumeroConta").mask("999999999999 999999999999 999999999999 999999999999", { placeholder: "*" });
            }

            $("#NumeroConta").val(valor);
        });
        $("#NumeroConta").mask("99999.99999 99999.999999 99999.999999 9 99999999999999", { placeholder: "*" });
        $("#NumeroConta").focusout(function () {
            debugger;
            var valor = 0;
            var devalor = 0;
            if($("#NumeroConta").val().startsWith("8")){
                valor = parseFloat($("#NumeroConta").val().substr(4, 7) + $("#NumeroConta").val().substr(13, 2) )
                devalor = parseFloat($("#NumeroConta").val().substr(15,2)  )
            }
            else{
                valor = parseFloat($("#NumeroConta").val().substr(44, 8));
                devalor = parseFloat($("#NumeroConta").val().substr(52, 2));
            }

            var d = parseFloat(valor + "," + devalor);
            $("#Valor").val(d);
            $("#Valor").text(d);
            $('#Valor').attr('value', d)
            document.getElementById("Valor").value = valor + "," + devalor;
        });
        $("#Validade").datepicker({
            defaultDate: "+1w",
            format: 'dd/mm/yyyy',
            language: 'pt-BR',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>'
        });

        $("#fornecedor").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetFornecedor","Contas")",
                    dataType: "json",
                    data: {
                        maxRows: 12,
                        startsWith: request.term,
                        empresaId: @Model.EmpresaId,
                        categoriaId: $("#CategoriaId").val()
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.RazaoSocial,
                                value: item.RazaoSocial,
                                id:item.Id
                            }
                        }));
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                $("#FornecedorId").val(ui.item.id);
                //log(ui.item ? "Selected: " + ui.item.label : "Nothing selected, input was " + this.value);
            }
        });

        $("#fuPDFAdd").change(function () {
            $("#iconSuccess").hide();
            $("#iconErro").hide();
            $("#iconLoad").show();
            var file = this.files[0];
            fileName = file.name;
            size = file.size;
            type = file.type;
            if (type.toLowerCase() == "application/pdf") { //I just want pdf files and only want to show
                SendFile(file);
            }
            else {
                $("#UploadFile").val(false);
                $.ajax({
                    url: "@Url.Action("RemoveUploadFileBoleto", "Contas")?tempId=@Model.TempId.ToString()",  //Server script to process data
                    data: { tempId: "@Model.TempId.ToString()" },
                    type: 'POST',
                    cache: false,
                    contentType: false,
                    processData: false,
                    async: true
                });
                //$("#txtuploadedMsgAdd").text("Error: Please select pdf file.");
                $("#iconLoad").hide();
                $("#lblif").removeClass("state-success");
                $("#lblif").addClass("state-error");
                $("#iconErro").show();
                $("#btnPagar").hide();
            }
        });


        function SendFile(file) {
            $(".progress").css("visibility", "visible");
            var formData = new FormData($('#frmPagar')[0]);
            formData.append("FileUpload", file);
            $.ajax({
                url: "@Url.Action("UploadFileBoleto", "Contas")?tempId=@Model.TempId.ToString()",  //Server script to process data
                data: { tempId: "@Model.TempId.ToString()" },
                type: 'POST',
                xhr: function () {  // Custom XMLHttpRequest
                    var myXhr = $.ajaxSettings.xhr();
                    if (myXhr.upload) { // Check if upload property exists
                        myXhr.upload.addEventListener('progress',
                        progressHandlingFunction, false); // For handling the progress of the upload
                    }
                    return myXhr;
                },
                data: formData,
                //Options to tell jQuery not to process data or worry about content-type.
                cache: false,
                contentType: false,
                processData: false
            });
        }

        //If file is successfully uploaded, label is updated with message
        function progressHandlingFunction(e) {
            if (e.lengthComputable) {
                //    $("#txtuploadedMsgAdd").text("  " + fileName + " uploaded successfully");
                $(".progress").css("visibility", "hidden");
                $("#iconLoad").hide();
                $("#iconSuccess").show();
                $("#lblif").addClass("state-success");
                $("#lblif").removeClass("state-error");
                $("#UploadFile").val(true);
                //$("#btnPagar").show();
            }
        }
    });
</script>