@using ContC.presentation.mvc.Controllers
@using DevExpress.Web.ASPxEditors
@using DevExpress.Web.ASPxGridView
@model ContC.presentation.mvc.Models.EmpresaCategoriaViewModel

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridView";
        settings.KeyFieldName = "Id";
        settings.Width = Unit.Percentage(100);
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.CallbackRouteValues = new { Controller = "Categoria", Action = "BatchEditingPartial" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Categoria", Action = "BatchEditingUpdateModel" };

        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Row;
        settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

        settings.CommandColumn.Visible = !(string.IsNullOrEmpty(Model.EmpresaId) || Model.EmpresaId == "0");
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.SettingsCommandButton.NewButton.ButtonType = GridViewCommandButtonType.Image;
        settings.SettingsCommandButton.NewButton.Image.Url = Url.Content("../Content/images/icons/editar.png");
        settings.SettingsCommandButton.DeleteButton.ButtonType = GridViewCommandButtonType.Image;
        settings.SettingsCommandButton.DeleteButton.Image.Url = Url.Content("../Content/images/icons/deletar.png");
        settings.CommandColumn.Width = Unit.Pixel(50);

        settings.SettingsBehavior.AllowGroup = true;
        settings.SettingsBehavior.FilterRowMode = GridViewFilterRowMode.Auto;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.CommandColumn.ShowClearFilterButton = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;

        settings.Columns.Add(column =>
        {
            column.FieldName = "TipoCategoriaId";
            column.Caption = "Tipo Categoria";
            column.Width = Unit.Pixel(200);
            
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ListProvider.GetTiposCategoria();
            comboBoxProperties.TextField = "Descricao";
            comboBoxProperties.ValueField = "Id";
            comboBoxProperties.ValueType = typeof(int);
            
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "TiposRelacaoIds";
            column.Caption = "Tipos de Relação";
            column.ColumnType = MVCxGridViewColumnType.TokenBox;
            var tokenBoxProperties = column.PropertiesEdit as TokenBoxProperties;
            tokenBoxProperties.AllowCustomTokens = false;
            tokenBoxProperties.IncrementalFilteringMode=IncrementalFilteringMode.Contains;
            tokenBoxProperties.ShowDropDownOnFocus = ShowDropDownOnFocusMode.Always;
            tokenBoxProperties.DataSource = ListProvider.GetTiposRelacao();
            tokenBoxProperties.TextField = "Descricao";
            tokenBoxProperties.ValueField = "Id";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Descricao";
            column.Caption = "Descrição";
        });

        foreach (GridViewDataColumn column in settings.Columns)
        {
            column.Settings.HeaderFilterMode = HeaderFilterMode.CheckedList;
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        }
        
        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.None;
            e.Editor.Enabled = !(string.IsNullOrEmpty(Model.EmpresaId) || Model.EmpresaId == "0");
        };

        settings.DataBound = (sender, e) =>
        {
            var gridView = sender as MVCxGridView;
            foreach (GridViewDataColumn col in gridView.DataColumns)
            {
                col.ReadOnly = (string.IsNullOrEmpty(Model.EmpresaId) || Model.EmpresaId == "0");
                col.EditFormSettings.Visible = col.ReadOnly ? DefaultBoolean.False : DefaultBoolean.True;
            }
        };
        
        settings.BeforeHeaderFilterFillItems = (s, e) =>
        {
            if (e.Column.FieldName == "TiposRelacaoIds")
            {                
                e.Values.Clear();
                foreach (var item in ListProvider.GetTiposRelacao())
                {
                    //e.AddValue(item.Descricao, item.Id.ToString(), new BinaryOperator("TiposRelacaoDescritivos", "%" + item.Descricao + "%", BinaryOperatorType.Like).ToString());

                    e.AddValue(item.Descricao, string.Empty, "TiposRelacaoDescritivos LIKE '%" + item.Descricao + "%'");
                    
                }
                e.Handled = true;
            }

        };
        

    }).Bind(Model.Categorias).GetHtml()


