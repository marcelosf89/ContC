@model ContC.presentation.mvc.Models.ApropriacaoViewModel
@if (Model.EmpresaId != null && Convert.ToInt32(Model.EmpresaId) > 0)
{
    <script>

        function OnBeginCallback(s, e) {
            e.customArgs["empresaId"] = $("#EmpresaId").val();
            e.customArgs["CompetenciaId"] = $("#CompetenciaId").val();
        }

        $(document).ready(function () {

            $('#CompetenciaId').qtip({
                content: {
                    text: 'Período que representa a competência da atividade que você deseja registrar no sistema.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#LocalidadeId').qtip({
                content: {
                    text: 'Local onde será registrada a atividade, feriados poderão variar de acordo com a localidade escolhida.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#DataInicial').qtip({
                content: {
                    text: 'Data de início da atividade. Esta data deverá ser válida e contida na competência escolhida.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#DataFinal').qtip({
                content: {
                    text: 'Data de término da atividade. Esta data deverá ser válida e contida na competência escolhida.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#CentroDeCustoId').qtip({
                content: {
                    text: 'Representa um contrato, um projeto ou uma área que poderá absorver registro de atividades.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#CategoriaId').qtip({
                content: {
                    text: 'A categoria poderá variar de acordo com a relação do usuário na empresa. Representa em termos de custos, a categoria da atividade que será registrada no sistema.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#Descricao').qtip({
                content: {
                    text: 'Breve descritivo da atividade que será registrada no sistema.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#HhDiario').qtip({
                content: {
                    text: 'Quantidade de horas diárias da atividade. Esta quantidade está limitada de acordo com a relação do Usuario na empresa selecionada.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#IncluirFinaisDeSemana').qtip({
                content: {
                    text: 'Ativa/Desativa a inclusão de atividades quando a data cair num final de semana.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            $('#IncluirFeriados').qtip({
                content: {
                    text: 'Ativa/Desativa a inclusão de atividades quando a data cair num feriado. Esta funcionalidade pode variar de acordo com a localidade escolhida.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });

            if ($('#AprovarAutomaticamente') != null) {

                $('#AprovarAutomaticamente').qtip({
                    content: {
                        text: 'Funcionalidade disponibilizada apenas para líderes de equipe. Horas apropriadas utilizando esta funcionalidade, não poderão ser mais alteradas.'
                    },
                    style: {
                        classes: 'qtip-youtube qtip-shadow qtip-rounded'
                    }
                });
            }

            $('#btnIncluirAtividade').qtip({
                content: {
                    text: 'Registra a atividade de acordo com os campos preenchidos.'
                },
                style: {
                    classes: 'qtip-youtube qtip-shadow qtip-rounded'
                }
            });



        });

        $(document).ready(function () {
            $("#CompetenciaId").change(function () {
                var empresaId = $("#EmpresaId").val();
                var competenciaId = $("#CompetenciaId").val();
                var gridDiv = $("#gridDiv");
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@Url.Action("ApropriacaoGridPartial", "Apropriacao")?empresaId=" + empresaId + "&competenciaId=" + competenciaId,
                    data: { "empresaId": empresaId, "competenciaId": competenciaId },
                    success: function (data) {
                        gridDiv.html('');
                        gridDiv.html(data);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve.');
                    }
                });
            });
        });

        $(document).ready(function () {

            $(function () {
                Globalize.culture("pt-BR");
                $(".decimalcontrol").spinner({
                    step: 0.50,
                    numberFormat: "n",
                    spin: function (event, ui) {
                        if (ui.value > 24) {
                            $(this).spinner("value", 0.50);
                            return false;
                        } else if (ui.value < 0.50) {
                            $(this).spinner("value", 24);
                            return false;
                        }
                    }
                });
                var current = $(".decimalcontrol").spinner("value");
                Globalize.culture("pt-BR");
                $("#spinner").spinner("value", current);
            });
        });

    </script>

    <hr />
    <div class="form-group">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Competencias)
                @Html.DropDownListFor(model => model.CompetenciaId, Model.Competencias, new { @class = "form-control" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Localidades)
                @Html.DropDownListFor(model => model.LocalidadeId, Model.Localidades, new { @class = "form-control" })
            </div>
        </div>
    </div>
    <hr />
    <h4>Nova Atividade:</h4>
    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.DataInicial)
            @Html.EditorFor(model => model.DataInicial)
            @if (Model.DataInicial != null)
            {
                <script>
                    var dataIni = "@string.Format("{0}-{1}-{2}", Model.DataInicial.Value.Year, Model.DataInicial.Value.Month.ToString().PadLeft(2, '0'), Model.DataInicial.Value.Day.ToString().PadLeft(2, '0'))";
                    $('#DataInicial').val(dataIni);
                </script>
            }
        </div>
        <div class="col-md-2">
            @Html.LabelFor(model => model.DataFinal)
            @Html.EditorFor(model => model.DataFinal)
            @if (Model.DataFinal != null)
            {
                <script>
                    var dataFim = "@string.Format("{0}-{1}-{2}", Model.DataFinal.Value.Year, Model.DataFinal.Value.Month.ToString().PadLeft(2, '0'), Model.DataFinal.Value.Day.ToString().PadLeft(2, '0'))";
                    $('#DataFinal').val(dataFim);
                </script>
            }
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.CentroDeCustos)
            @Html.DropDownListFor(model => model.CentroDeCustoId, Model.CentroDeCustos, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Categorias)
            @Html.DropDownListFor(model => model.CategoriaId, Model.Categorias, new { @class = "form-control" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="row">
            <div class="col-md-8">
                @Html.LabelFor(model => model.Descricao)
                @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.HhDiario)
                @Html.EditorFor(model => model.HhDiario)

            </div>
        </div>
    </div>

    <div class="form-inline">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.IncluirFinaisDeSemana)
                @Html.CheckBoxFor(model => model.IncluirFinaisDeSemana, new { @class = "checkbox" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.IncluirFeriados)
                @Html.CheckBoxFor(model => model.IncluirFeriados, new { @class = "checkbox" })
            </div>
            @if (Model.HabilitaAprovarAutomaticamente)
            {
                <div class="col-md-4">
                    @Html.LabelFor(model => model.AprovarAutomaticamente)
                    @Html.CheckBoxFor(model => model.AprovarAutomaticamente, new { @class = "checkbox" })

                </div>
            }
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-4">
            <button id="btnIncluirAtividade" type="submit" class="btn btn-primary">Registrar Atividade</button>
        </div>
    </div>
    <hr />


}
