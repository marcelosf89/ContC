@using DevExpress.Web.ASPxGridView
@model IList<ContC.domain.entities.DTO.AprovacaoDTO>
@{
    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "gvAprovacao";
            settings.KeyFieldName = "Id";
            settings.CallbackRouteValues = new { Controller = "Aprovacao", Action = "AprovacaoGridPartial"};
            settings.ClientSideEvents.BeginCallback = "gvAprovacaoOnBeginCallback";
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Apropriacao", Action = "ApropriacaoGridDeletePartial" };
            //settings.SettingsBehavior.AllowGroup = true;
            settings.SettingsBehavior.FilterRowMode = GridViewFilterRowMode.Auto;
            settings.Settings.ShowFilterRow = true;
            settings.Settings.ShowFilterRowMenu = true;
            settings.CommandColumn.ShowClearFilterButton = true;
            settings.Settings.ShowHeaderFilterButton = true;
            settings.SettingsPopup.HeaderFilter.Height = 200;
            //settings.Settings.ShowGroupPanel = true;
            //settings.SettingsBehavior.AutoExpandAllGroups = true;

            settings.CommandColumn.ShowEditButton = false;
            settings.CommandColumn.ShowNewButton = false;
            settings.CommandColumn.ShowUpdateButton = false;
            settings.CommandColumn.ShowCancelButton = false;
            settings.CommandColumn.ShowDeleteButton = false;
            settings.CommandColumn.Visible = true;

            settings.CommandColumn.ButtonType = GridViewCommandButtonType.Image;
            settings.ClientSideEvents.CustomButtonClick = "function(s, e) {{ CustomButtonClick(s, e); }}";
            settings.CommandColumn.Width = Unit.Pixel(50);
            
            settings.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton() { ID = "btnAprovacao", Text = "Aprovar" });
            settings.CommandColumn.CustomButtons[0].Image.Url = Url.Content("../Content/images/icons/confirmar.png");
            
            settings.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton() { ID = "btnNaoAprovado", Text = "Desaprovar" });
            settings.CommandColumn.CustomButtons[1].Image.Url = Url.Content("../Content/images/icons/cancelar.png");
            
            settings.Width = Unit.Percentage(100);
            settings.Settings.ShowFooter = true;
            settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Hh");
            settings.SummaryDisplayText = (s, e) =>
            {
                if (e.Item.FieldName == "Hh")
                {
                    e.Text = string.Format("{0}Hh", e.Value);
                }
            };
            
            settings.Columns.Add(column =>
            {
                column.FieldName = "Id";
                column.Caption = "Id";
                column.Visible = false;
            });
            //settings.Columns.Add(column =>
            //{
            //    column.FieldName = "Profissional";
            //    column.Caption = "Profissional";
            //    //column.GroupBy();
            //    //column.GroupIndex = 0;
            //    column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            //});

            //settings.Columns.Add(column =>
            //{
            //    column.FieldName = "Empresa";
            //    column.Caption = "Empresa";
            //    //column.GroupBy();
            //    //column.GroupIndex = 1;
            //    column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            //});
            settings.Columns.Add(column =>
            {
                column.FieldName = "Descricao";
                column.Caption = "Descrição da Atividade";
                column.Width = Unit.Pixel(200);
                column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });
            settings.Columns.Add(column =>
            {
                column.FieldName = "Localidade";
                column.Caption = "Localidade";
                column.Width = Unit.Pixel(50);
                column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });
            settings.Columns.Add(column =>
            {
                column.FieldName = "Categoria";
                column.Caption = "Categoria";
                column.Width = Unit.Pixel(200);
                column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });
            settings.Columns.Add(column =>
            {
                column.FieldName = "Competencia";
                column.Caption = "Competência";
                column.Width = Unit.Pixel(50);
                column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });         
            settings.Columns.Add(column =>
            {
                column.FieldName = "CentroDeCusto";
                column.Caption = "Centro de Custo";
                column.Width = Unit.Pixel(80);
                column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });
            settings.Columns.Add(column =>
            {
                column.FieldName = "Hh";
                column.Caption = "Hh";
                column.Width = Unit.Pixel(50);
                column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });

            settings.Columns.Add(column =>
            {
                column.FieldName = "DataApropriacao";
                column.Caption = "Data da Apropriação";
                column.Width = Unit.Pixel(100);
                column.ColumnType = MVCxGridViewColumnType.DateEdit;
                column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });  
      

        });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }

}

@grid.Bind(Model).GetHtml()
