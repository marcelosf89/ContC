@using ContC.presentation.mvc.Controllers
@using DevExpress.Web.ASPxEditors
@using DevExpress.Web.ASPxGridView
@model ContC.presentation.mvc.Models.TipoRelacaoViewModel

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridView";
        settings.KeyFieldName = "Id";
        settings.Width = Unit.Percentage(100);
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.CallbackRouteValues = new { Controller = "Relacao", Action = "BatchEditingPartial" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Relacao", Action = "BatchEditingUpdateModel" };

        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Row;
        settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

        settings.CommandColumn.Visible = !(string.IsNullOrEmpty(Model.TipoRelacaoId) || Model.TipoRelacaoId == "0");
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.SettingsCommandButton.NewButton.ButtonType = GridViewCommandButtonType.Image;
        settings.SettingsCommandButton.NewButton.Image.Url = Url.Content("../Content/images/icons/editar.png");
        settings.SettingsCommandButton.DeleteButton.ButtonType = GridViewCommandButtonType.Image;
        settings.SettingsCommandButton.DeleteButton.Image.Url = Url.Content("../Content/images/icons/deletar.png");
        settings.CommandColumn.Width = Unit.Pixel(50);

        settings.SettingsBehavior.AllowGroup = true;
        settings.SettingsBehavior.FilterRowMode = GridViewFilterRowMode.Auto;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.CommandColumn.ShowClearFilterButton = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;


        settings.Columns.Add(column =>
        {
            column.FieldName = "EmpresaId";
            column.Caption = "Empresa";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ListProvider.GetEmpresas();
            comboBoxProperties.TextField = "RazaoSocial";
            comboBoxProperties.ValueField = "Id";
            comboBoxProperties.ValueType = typeof(int);

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "UsuarioId";
            column.Caption = "Usuario";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ListProvider.GetUsuarios();
            comboBoxProperties.TextField = "Nome";
            comboBoxProperties.ValueField = "Id";
            comboBoxProperties.ValueType = typeof(int);

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "QtdeMaximaHorasDiarias";
            column.Caption = "Qtde Máxima de Horas Diárias";
            column.Width = Unit.Pixel(150);

            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinProperties = column.PropertiesEdit as SpinEditProperties;
            spinProperties.AllowNull = false;
            spinProperties.Increment = (decimal)0.50;
            spinProperties.MinValue = (decimal)0.50;
            spinProperties.MaxValue = 24;
            spinProperties.LargeIncrement = 1;
            spinProperties.DisplayFormatString = "n";
            spinProperties.NumberFormat = SpinEditNumberFormat.Number;
            spinProperties.SpinButtons.ShowLargeIncrementButtons = true;
        });

        if (!(string.IsNullOrEmpty(Model.TipoRelacaoId) || Model.TipoRelacaoId == "0") && ListProvider.IsSupplyCategory(Convert.ToInt32(Model.TipoRelacaoId)))
        {
            settings.Columns.Add(column =>
            {
                column.FieldName = "RazaoSocialFornecedor";
                column.Caption = "Razão Social do Fornecedor";
                column.Width = Unit.Pixel(150);
            });
        }

       settings.CellEditorInitialize = (sender, e) =>
       {
            e.Editor.Enabled = !(string.IsNullOrEmpty(Model.TipoRelacaoId) || Model.TipoRelacaoId == "0");
       };

       settings.DataBound = (sender, e) => {
            var gridView = sender as MVCxGridView;
            foreach (GridViewDataColumn col in gridView.DataColumns)
            {
                col.ReadOnly = (string.IsNullOrEmpty(Model.TipoRelacaoId) || Model.TipoRelacaoId == "0");
                col.EditFormSettings.Visible = col.ReadOnly ? DefaultBoolean.False : DefaultBoolean.True;
            }
        };

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.None;
        };

        foreach (GridViewDataColumn column in settings.Columns)
        {
            column.Settings.HeaderFilterMode = HeaderFilterMode.CheckedList;
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        }

    }).Bind(Model.Relacoes).GetHtml()
